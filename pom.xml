<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>dk.dbc.automarc</groupId>
    <artifactId>automarc</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>
    <!-- Use dbc wide pom first. Set relative path to empty, to force it to get it from the repos -->
    <parent>
        <groupId>dk.dbc</groupId>
        <artifactId>dbc-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <serviceutils.version>0.1-SNAPSHOT</serviceutils.version>
        <slf4j.version>1.7.25</slf4j.version>
        <microprofile.version>1.2</microprofile.version>
        <perf4j.version>0.9.16</perf4j.version>
        <jdk.target.version>1.8</jdk.target.version>
        <maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version>
        <maven.war.plugin.version>3.1.0</maven.war.plugin.version>
        <jackson.version>2.9.7</jackson.version>
        <jaxws.maven.plugin>2.3</jaxws.maven.plugin>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/content/groups/public</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>serviceutils</artifactId>
            <version>${serviceutils.version}</version>
            <exclusions><exclusion>
                <groupId>dk.dbc</groupId>
                <artifactId>json-binding</artifactId>
            </exclusion></exclusions>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>json-binding</artifactId>
            <version>0.1-SNAPSHOT</version>
            <exclusions><exclusion>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
            </exclusion></exclusions>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-commons-marc</artifactId>
            <version>1.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.7</version>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>stopwatch</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>2.22.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <version>${microprofile.version}</version> <!-- version 1.2 available since Payara v4.1.2.181 -->
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>automarc</finalName>
        <resources>
            <resource>
                <targetPath>META-INF/wsdl/update</targetPath>
                <directory>src/wsdl/update</directory>
                <includes>
                    <include>catalogingUpdate.wsdl</include>
                    <include>catalogingUpdate.xsd</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${jdk.target.version}</source>
                    <target>${jdk.target.version}</target>
                    <testSource>${jdk.target.version}</testSource>
                    <testTarget>${jdk.target.version}</testTarget>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>${jaxws.maven.plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
                            </vmArgs>
                            <wsdlFiles>
                                <wsdlFile>catalogingUpdate.wsdl</wsdlFile>
                            </wsdlFiles>
                            <wsdlLocation>META-INF/wsdl/update/catalogingUpdate.wsdl</wsdlLocation>
                            <wsdlDirectory>${basedir}/src/wsdl/update</wsdlDirectory>
                            <packageName>dk.dbc.updateservice.service.api</packageName>
                            <staleFile>${project.build.directory}/jaxws/stale/catalogingUpdate.stale</staleFile>
                        </configuration>
                        <id>wsimport-generate-catalogingUpdate-internal</id>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
